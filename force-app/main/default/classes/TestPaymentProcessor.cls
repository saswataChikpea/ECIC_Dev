@isTest
public with sharing class TestPaymentProcessor {
    @isTest
    static void testMethodFirst() {
        Map<String,String> respMap=TestDataFactory.testDataSetupThree();// respMap.get('invoiceID');
        String invoiceID = respMap.get('invoiceID');
        String paymentResponse='{"auth_cv_result":"M","req_locale":"en-us","req_card_type_selection_indicator":"1","auth_trans_ref_no":"6388839856876688103001","payer_authentication_enroll_veres_enrolled":"Y","req_bill_to_surname":"sfs","payer_authentication_proof_xml":"&lt;AuthProof&gt;&lt;Time&gt;2021 Dec 07 13:32:56&lt;/Time&gt;&lt;DSUrl&gt;https://merchantacsstag.cardinalcommerce.com/MerchantACSWeb/vereq.jsp?acqid=CYBS&lt;/DSUrl&gt;&lt;VEReqProof&gt;&lt;Message id=&quot;mkutG4uZey331tpOy1t0&quot;&gt;&lt;VEReq&gt;&lt;version&gt;1.0.2&lt;/version&gt;&lt;pan&gt;XXXXXXXXXXXX0002&lt;/pan&gt;&lt;Merchant&gt;&lt;acqBIN&gt;469216&lt;/acqBIN&gt;&lt;merID&gt;088012797203&lt;/merID&gt;&lt;/Merchant&gt;&lt;Browser&gt;&lt;deviceCategory&gt;0&lt;/deviceCategory&gt;&lt;accept&gt;*/*&lt;/accept&gt;&lt;userAgent&gt;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.55 Safari/537.36 Edg/96.0.1054.43&lt;/userAgent&gt;&lt;/Browser&gt;&lt;/VEReq&gt;&lt;/Message&gt;&lt;/VEReqProof&gt;&lt;VEResProof&gt;&lt;Message id=&quot;mkutG4uZey331tpOy1t0&quot;&gt;&lt;VERes&gt;&lt;version&gt;1.0.2&lt;/version&gt;&lt;CH&gt;&lt;enrolled&gt;Y&lt;/enrolled&gt;&lt;acctID&gt;5129049&lt;/acctID&gt;&lt;/CH&gt;&lt;url&gt;https://merchantacsstag.cardinalcommerce.com/MerchantACSWeb/pareq.jsp?vaa=b&amp;amp;goldlt;/url&gt;&lt;protocol&gt;ThreeDSecure&lt;/protocol&gt;&lt;/VERes&gt;&lt;/Message&gt;&lt;/VEResProof&gt;&lt;/AuthProof&gt;","req_card_expiry_date":"03-2035","merchant_advice_code":"01","card_type_name":"Visa","auth_amount":"2740.00","auth_response":"00","bill_trans_ref_no":"6388839856876688103001","req_payment_method":"card","auth_time":"2021-12-07T133306Z","transaction_id":"6388839856876688103001","req_card_type":"001","payer_authentication_pares_status":"Y","payer_authentication_cavv":"AAABAWFlmQAAAABjRWWZEEFgFz+=","auth_avs_code":"Y","auth_code":"831000","req_bill_to_address_country":"IN","auth_cv_result_raw":"M","req_profile_id":"64E0B430-A40D-45CD-A586-D91F5E28431B","req_bill_to_address_line2":"s","signed_date_time":"2021-12-07T13:33:06Z","req_bill_to_address_line1":"sdfs","payer_authentication_validate_e_commerce_indicator":"vbv","req_card_number":"xxxxxxxxxxxx0002","signature":"LyGH7vMhExYRVTntLXR1IZ06zY4n5SGzLIPUForiq0s=","utf8":"âœ“","req_bill_to_address_city":"sfdf","auth_cavv_result":"2","reason_code":"100","req_bill_to_forename":"sdfsdf","request_token":"Axj//wSTWlb2wE4YedZZAEos2ZuHDhm5cNWzhu2bOHDFgzYMGKftv9xXkAKftv9xXkKwThcoCnsMmkmXoxZDKEBgGk1pW9sBOGHnWWQAxTuQ","auth_cavv_result_raw":"2","req_amount":"2740","req_bill_to_email":"satya@chikpea.com","payer_authentication_reason_code":"100","auth_avs_code_raw":"Y","req_currency":"HKD","decision":"ACCEPT","message":"Request was processed successfully.","signed_field_names":"transaction_id,decision,req_access_key,req_profile_id,req_transaction_uuid,req_transaction_type,req_reference_number,req_amount,req_currency,req_locale,req_payment_method,req_bill_to_forename,req_bill_to_surname,req_bill_to_email,req_bill_to_address_line1,req_bill_to_address_line2,req_bill_to_address_city,req_bill_to_address_country,req_card_number,req_card_type,req_card_type_selection_indicator,req_card_expiry_date,card_type_name,message,reason_code,auth_avs_code,auth_avs_code_raw,auth_response,auth_amount,auth_code,auth_cavv_result,auth_cavv_result_raw,auth_cv_result,auth_cv_result_raw,auth_trans_ref_no,auth_time,request_token,merchant_advice_code,bill_trans_ref_no,payer_authentication_enroll_veres_enrolled,payer_authentication_xid,payer_authentication_proof_xml,payer_authentication_eci,payer_authentication_cavv,payer_authentication_pares_status,payer_authentication_validate_result,payer_authentication_reason_code,payer_authentication_validate_e_commerce_indicator,signed_field_names,signed_date_time","req_transaction_uuid":"137d7179-af7e-834e-d7ea-e8db0292133e","payer_authentication_eci":"05","req_transaction_type":"sale","payer_authentication_xid":"bWt1dEc0dVpleTMzMXRwT3kxdDA=","req_access_key":"d697528c3de53236999c61dff8d41f03","req_reference_number":"I-000001209_'+invoiceID+'","payer_authentication_validate_result":"0"}';
        PaymentProcessor.processPaymentTransaction(paymentResponse);
    }
    @isTest
    static void testMethodSecond() {
        Map<String,String> respMap=TestDataFactory.testDataSetupThree();// respMap.get('invoiceID');
        String cla_id = respMap.get('cla_id');
        PaymentProcessor.issueCreditLimit(cla_id);
        PaymentProcessor.callConvertCLItoCreditLimit(cla_id);
    }
}